---
layout: post  
title: "Python 패키지 관리(apt와 pip의 차이점)"
date: 2024-12-05
categories: Python
---

### 1. `sudo apt install python3-pandas`
- 설명
  - `apt`는 Ubuntu/Debian과 같은 Linux 배포판에서 시스템 패키지를 관리하는 도구입니다.
  - 이 명령은 `pandas` 패키지를 시스템 전체에 설치하며, 패키지 버전은 Ubuntu의 소프트웨어 저장소(Repository)에 등록된 버전을 따릅니다.
  
- 특징
  - 설치되는 버전은 안정성을 우선으로 하며, 최신 버전이 아닐 수 있습니다.
  - 시스템 Python 환경에 설치되므로 모든 사용자와 프로젝트에서 공유됩니다.
  - 설치된 `pandas`는 시스템의 Python 인터프리터에서 사용할 수 있습니다.
  - 주로 운영 체제의 기본 Python 프로그램과 호환되도록 제공됩니다.

- 사용 상황
  - 시스템의 기본 Python 환경에서 안정된 패키지 버전이 필요할 때.
  - 프로젝트별로 가상 환경을 사용할 필요가 없는 경우.

<br>

### 2. `pip install pandas`
- 설명
  - `pip`는 Python에서 사용하는 표준 패키지 관리 도구로, PyPI(Python Package Index)에서 최신 Python 패키지를 설치합니다.
  - 이 명령은 기본적으로 현재 활성화된 Python 환경(가상 환경 포함)에만 설치됩니다.

- 특징
  - PyPI에서 제공하는 최신 버전의 `pandas`를 설치합니다.
  - 가상 환경에서 실행하면 해당 환경에만 영향을 미치며, 시스템 Python과 분리된 독립적인 환경을 제공합니다.
  - 프로젝트별로 필요에 따라 다양한 버전을 설치하고 관리할 수 있습니다.
  
- 사용 상황
  - 최신 버전의 `pandas`를 사용해야 할 때.
  - 프로젝트별로 독립적인 Python 환경을 유지하려고 할 때.
  - Jupyter Notebook에서 사용하기 위해 커널에 맞춰 설치할 때.
