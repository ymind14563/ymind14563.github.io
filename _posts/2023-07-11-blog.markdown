---
layout: post
title: CLI 기본 명령어
date:   2023-07-11
categories: 
---

## AWS, Ubuntu, git 어디에서나 사용할 수 있습니다.

홈 디렉토리(~)에서 시작해 주세요. 터미널을 열고 다음 명령어를 입력하여 현재 위치를 홈 디렉토리로 변경합니다.


프롬프트(Prompt)
터미널은 CLI(Command-Line Interface)입니다. CLI에서는 명령어를 통해 컴퓨터와 소통합니다. 터미널을 실행하면 명령어를 입력할 수 있는 프롬프트가 나타납니다. 여러분은 프롬프트에서 명령어를 입력하고 실행하여 원하는 작업을 수행할 수 있습니다.

CLI에서 프롬프트는 키보드 입력을 받는 공간이며, 여러분이 입력한 명령어를 처리하고 결과를 출력합니다.

```
pwd: 현재 위치 확인하기
```
GUI(Graphical User Interface)의 탐색기에서 현재 위치를 확인할 때는 탐색기 상단의 경로를 확인합니다. 
하지만 CLI에서는 pwd(Print Working Directory) 명령어를 사용하여 현재 위치를 확인합니다.

pwd 명령어를 입력하고 실행하면 현재 위치를 나타내는 경로가 터미널에 표시됩니다. 이 경로는 현재 작업 중인 폴더를 나타냅니다.

```
mkdir: 새로운 폴더 생성하기
```
mkdir 명령어는 새로운 폴더를 생성하는 데 사용됩니다. 다음 명령어를 사용하여 "helloWorld"라는 이름의 새로운 폴더를 생성하세요.

```
mkdir helloWorld
```
mkdir 명령어를 사용하여 "helloWorld" 폴더가 생성됩니다. 이제 ls 명령어를 사용하여 폴더가 정상적으로 생성되었는지 확인할 수 있습니다.

```
ls: 특정 폴더에 포함된 파일이나 폴더 확인하기
```
ls 명령어는 특정 폴더에 포함된 파일이나 폴더의 목록을 출력합니다. 

```
ls -l: l은 폴더나 파일의 포맷을 전부 표현하라는 의미입니다.

ls -a: ls의 옵션 a는 "all"이라는 의미입니다. 숨어있는 폴더나 파일을 포함한 모든 항목을 터미널에 출력합니다.

ls -al
```
<br>

```
touch hi.txt
```
파일을 만들기 위해 touch라는 명령어를 사용합니다.


```
echo
```
echo는 echo 뒤의 내용을 화면에 출력해 주는 역할을 합니다. 즉, echo hello라고 입력한다면 단순히 화면에 hello를 출력해 줍니다.

```
echo 이메일 > hi.txt
```

echo 명령어의 실행 결과, 즉 여러분이 작성한 이메일 주소가 화면에 출력되는 대신에 hi.txt 파일에 저장됩니다.

```
cat hi.txt
```
cat으로 텍스트 파일 "hi.txt"를 출력하면, 방금 작성한 이메일이 터미널에 나타납니다. 명령어 cat은 파일의 내용을 터미널에 출력하는 명령어입니다.


cat 명령어로 너무 큰 파일을 출력하게 되면 터미널이 엉망이 됩니다.

```
rm: 폴더나 파일 삭제하기
```

```
rm -rf bye
```
옵션 r은 "recursive"를 뜻하며, 옵션 f는 "force"를 뜻합니다.
옵션 r은 폴더를 지울 때 사용하고, 옵션 f는 질문을 받지 않고 지울 때 사용합니다.

```
mv: 폴더나 파일의 이름을 변경, 또는 폴더나 파일의 위치 옮기기
mv bye.txt bye/
```
명령어 mv를 통해 파일 "bye.txt"를 폴더 "bye"로 옮깁니다. 명령어 mv 뒤에는 순서대로 [폴더나 파일의 이름] [도착 폴더의 이름]를 입력합니다.
명령어 mv를 이용하면, 폴더나 파일의 이름을 변경할 수 있습니다.

```
cp: 폴더나 파일을 복사하기
```




