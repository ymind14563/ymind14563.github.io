---
layout: post
title: 반복문
date: 2023-08-21
categories: JAVA
---
# 1. for문
for문은 조건식이 참인 동안 주어진 횟수만큼 실행문을 반복적으로 수행합니다.

```
public class Main {
  public static void main(String[] args) {
    int sum = 0;
    // for (초기화; 조건식; 증감식)
    for(int num = 0; num < 10; num++) {	
      sum += num;
    }
    System.out.println(sum); // 1~9의 합인 45가 출력됩니다.
  }
}
```
## 향상된 for 문
```
public class EnhancedForLoop {
  public static void main(String[] args) {
    String[] hobbies = {"reading books", "playing football", "drawing pictures"};
    for(String hobby : hobbies) {
      System.out.println("I enjoy " + hobby + ".");
    }
  }
}

/*
I enjoy reading books.
I enjoy playing football.
I enjoy drawing pictures.
*/
```
<br/><br/>
# 2. break문
break문은 반복문인 for문, while문, do-while문, switch문 을 실행 중지할 때 사용됩니다. 

<br/><br/>
# 3. continue문
continue문은 반복문인 for문, while문, do-while문에서만 사용됩니다. <br>
continue문은 반복문을 종료하지 않고 다음 차례로 넘어가 계속 반복을 수행합니다. <br>
if문의 조건을 만족하는 경우 continue문을 실행하여 그 이후의 코드를 실행하지 않고 다음 반복으로 넘어갑니다. <br>

```
public class Main {
    public static void main(String[] args) throws Exception {
        for (int i = 0; i < 10; i++) {
            if (i % 2 == 0) { //나머지가 0일 경우는
                continue; //다음 반복으로 넘어간다.
            }
            System.out.println(i); //홀수만 출력
        }
    }
}
/*
1,3,5,7,9
*/
```